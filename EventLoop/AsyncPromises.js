const {readFile, writeFile}=require('fs').promises
// const util =require('util')
// const readFilePromise = util.promisify(readFile)
// const writeFilePromise = util.promisify(writeFile)

const start = async()=>{
    try{
        const first =await readFile('./Trials/Subfolder/First.txt','utf8')
        const second =await readFile('./Trials/Subfolder/Second.txt','utf8') 
        await writeFile('./Trials/Subfolder/promiseResult.txt',`This is Newly Generated by Promise object///: ${first} ${second}`)
        console.log(first)
        console.log(second)
    }catch(error){
        console.log(error)
    }   
}
start()

////////////////2nd Coded////////////////////////////////////////

// const {readFile, writeFile}=require('fs')
// const util =require('util')
// const readFilePromise = util.promisify(readFile)
// const writeFilePromise = util.promisify(writeFile)

// const start = async()=>{
//     try{
//         const first =await readFilePromise('./Trials/Subfolder/First.txt','utf8')
//         const second =await readFilePromise('./Trials/Subfolder/Second.txt','utf8') 
//         console.log(first)
//         console.log(second)
//     }catch(error){
//         console.log(error)
//     }   
// }
// start()

//////////////1st Coded////////////////////////////////////////

// const getText=(path)=>{
//     return new Promise((resolve,reject)=>{
//         readFile(path,'utf8',(err,data)=>{
//             if(err){
//                 reject(err)
//             }else{
//                 resolve(data)
//             }
//         })
//     })
// }

// const start = async()=>{
//     try{
//         const first =await getText('./Trials/Subfolder/First.txt')
//         const second =await getText('./Trials/Subfolder/Second.txt') 
//         console.log(first)
//         console.log(second)
//     }catch(error){
//         console.log(error)
//     }   
// }

// getText('./Trials/Subfolder/First.txt')
// .then((result)=> console.log(result))
// .catch((err)=> console.log(err))
 